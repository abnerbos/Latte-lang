/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 KuiGang Wang
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package lt::lang::`implicit`

import lt::runtime::Implicit
import lt::runtime::LatteObject
import lt::lang::`implicit`::collection::_

import java::util::List
import java::util::Map
import java::util::Set

/**
 * implicit casts on collections
 */
implicit object CollectionImplicit
    implicit cast(list:List):RichList = RichList(list)
    implicit cast(set:Set):RichSet = RichSet(set)
    implicit cast(map:Map):RichMap = RichMap(map)
    implicit cast(i:Iterable):RichIterable = RichIterable(i)

/**
 * implicit casts for object
 */
implicit object ObjectImplicit
    implicit cast(s)=RichObject(s)

/**
 * implicit casts for primitives
 */
implicit object PrimitivesImplicit
    implicit cast(b:Boolean):RichBool = RichBool(b)
    implicit cast(b:Byte):RichByte = RichByte(b)
    implicit cast(c:Character):RichChar = RichChar(c)
    implicit cast(d:Double):RichDouble = RichDouble(d)
    implicit cast(f:Float):RichFloat = RichFloat(f)
    implicit cast(i:Integer):RichInt = RichInt(i)
    implicit cast(l:Long):RichLong = RichLong(l)
    implicit cast(s:Short):RichShort = RichShort(s)

/**
 * implicit casts for string
 */
implicit object StringImplicit
    cast(s:String):RichString = RichString(s)
