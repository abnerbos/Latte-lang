; a demo about how collection works

; List

; JSON Literal
ls = ["z","y","x"]
list = List()

; add
list.add("a")
list + "b"         ; operator binding (add)

; concat
; concat will NOT modify the current list
concatRes = list.concat("c")
concatRes = concatRes:::"d"   ; operator binding (concat)
concatRes = list.concat(ls)
; concatRes is [a,b,z,y,x]

; addAll
list.addAll(["w","v","u"])

; build a string
str = list.join(",")
; str is "a,b,w,v,u"

; reverse() DO modifies and returns the list itself
str2 = list.reverse().join(",")
; str2 is "u,v,w,b,a"

list2 = List(list)
shiftResult = list2.shift()
; the result is u
; and list2 will be [v,w,b,a]

sliceResult1 = list2.slice(1,3)
; the result is [w,b]

sliceResult2 = list2.slice(1)
; the result is [w,b,a]

list2.unshift("t")
; list2 is [t,v,w,b,a]
list2.unshift(["r","s"])
; list2 is [r,s,t,v,w,b,a]

lengthResult = list2.length
; (length is not a field, it's a method with 0 parameters.)
; length is 7

list3 = List((l)->
        l.add("a")
        l.add("b")
        l.add("c")
)
; list3 is [a,b,c]

indexRes = list3[1]
; the result is "b"

list3[1]="d"
; list3 is [a,d,c]
