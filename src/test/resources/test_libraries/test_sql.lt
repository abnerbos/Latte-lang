package lt::sql::test

import lt::sql::_

data class User
    id=Column(this, "id")
    name=Column(this, "name")

class TestSQL
    static
        testSelectString()
            db = DB()
            user = User()

            return (db select [user.id,user.name] from user where user.id > 7 orderBy user.id.desc limit 1,7) buildSQL

        testSelectWithSubQuery()
            db = DB()
            user = User()

            return (db select [user.id, user.name] from user where user.id <= (db select user.id from user limit 1) orderBy user.id.desc) buildSQL

        testInsertString()
            db = DB()
            user = User()

            return (db insert_into user _ [user.id, user.name] values [1, 'cass']) buildSQL

        testUpdateString()
            db = DB()
            user = User()

            return (db update user set user.id:=1 where user.name=:='cass') buildSQL

        testDeleteString()
            db = DB()
            user = User()

            return (db delete_from user where user.id=:=1) buildSQL

        testDBUpdate()
            Class.forName("org.hsqldb.jdbcDriver")
            db = DB(
                url  = "jdbc:hsqldb:mem:score"
                user = "sa"
                pwd  = ""
            ).connect()
            db execUpdate "create table TestTbl(id INTEGER PRIMARY KEY, name VARCHAR)"
            db execUpdate "insert into TestTbl (1, 'cass')"
            return db execQuery "select * from TestTbl"
/*
        testManipDbQuery()
            Class.forName("org.hsqldb.jdbcDriver")

            db = DB(
                url  = "jdbc:hsqldb:mem:score"
                user = "sa"
                pwd  = ""
            ).connect()
            */
